}
load_taxonomy <- function(taxo="scimago")
{
if(taxo=="scimago")
{
nodes <- read.csv("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/TAXONOMIES/SCIMAGO/nodes.csv")
}
return(nodes)
}
nodes <- load_taxonomy(taxo="scimago")
nodes_ej <- read.csv(system.file("data/nodes.csv", package = "d3plus"))
View(nodes_ej)
View(nodes)
countries <- read.csv(system.file("data/countries.csv", package = "d3plus"))
View(countries)
d3plus("tree", countries)
View(countries)
View(pub_total)
d3plus("tree", bubbles[c("name","value")])
bubbles <- read.csv(system.file("data/bubbles.csv", package = "d3plus"))
View(bubbles)
d3plus("tree", bubbles[c("name","value")])
View(bubbles)
View(bubbles)
d3plus("tree", pub_total )
View(pub_total)
d3plus("tree", pub_total[c("title", "X...cites")] )
pub_total[c("title", "X...cites")]
names(pub_total)
d3plus("tree", pub_total[c("Title", "X...Cites")] )
d3plus("tree", pub_total[c("Title", "X...Cites")], color="red" )
d3plus("tree", pub_total[pub_total$X...Cites>100,c("Title", "X...Cites")], color="red" )
d3plus("rings", edges, focusDropdown = TRUE)
d3plus("scatter", countries)
?d3plus
d3plus("bubbles", bubbles)
d3plus("tree", countries)
d3plus("tree", bubbles[c("name","value")], color="group")
bubbles2 <- bubbles
bubbles2["color"] <- bubbles2$group
d3plus("tree", bubbles2[c("name","value")])
d3plus("tree", bubbles, color="group")
d3plus("tree", bubbles2[c("name","value", "color")])
d3plus("tree", bubbles2[c("name","value", "color", "group")])
View(bubbles2)
d3plus("tree", bubbles2[c("name","value", "group")])
d3plus("tree", bubbles2[c("name","value", "group")], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "group", "color")], grouping="TRUE")
View(bubbles2)
bubbles2["grouping"] <- TRUE
d3plus("tree", bubbles2[c("name","value", "color", )], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color" )], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color","grouping" )], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color", TRUE )], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color", "grouping" )], grouping="TRUE")
View(bubbles2)
names(pub_total)
as.list(names(pub_total))
getSettings
getAnywhere("getSettings")
getSettings <- function(type, data, ...)
{
args <- list(...)
focusDropdown <- args$focusDropdown %||% FALSE
attributes <- args$attributes %||% NULL
if (type == "tree") {
vars <- c("id", "size", "color")
data_names <- as.list(names(data))
names(data_names) <- vars[1:length(data_names)]
settings <- list(data_names = data_names)
}
if (type == "lines") {
xAxis <- names(data)[1]
id <- "variable"
value <- "value"
settings <- list(id = id, xAxis = xAxis, value = value)
}
if (type == "bubbles") {
vars = c("id", "group", "value")
data_names <- as.list(names(data))
names(data_names) <- vars
settings <- list(data_names = data_names, attributes = attributes)
}
if (type == "scatter") {
axis = c(2, 3)
id <- names(data)[1]
xAxis <- names(data)[axis[1]]
yAxis <- names(data)[axis[2]]
size <- names(data)[4]
size <- size %||% FALSE
settings <- list(id = id, xAxis = xAxis, yAxis = yAxis,
size = size)
}
if (type %in% c("network", "rings")) {
drawEdges <- TRUE
drawNodes <- TRUE
settings <- list(drawEdges = drawEdges, drawNodes = drawNodes,
focusDropdown = focusDropdown)
}
settings
}
getSettings <- function(type, data, ...)
{
print("OK BABY")
args <- list(...)
focusDropdown <- args$focusDropdown %||% FALSE
attributes <- args$attributes %||% NULL
if (type == "tree") {
vars <- c("id", "size", "color")
data_names <- as.list(names(data))
names(data_names) <- vars[1:length(data_names)]
settings <- list(data_names = data_names)
}
if (type == "lines") {
xAxis <- names(data)[1]
id <- "variable"
value <- "value"
settings <- list(id = id, xAxis = xAxis, value = value)
}
if (type == "bubbles") {
vars = c("id", "group", "value")
data_names <- as.list(names(data))
names(data_names) <- vars
settings <- list(data_names = data_names, attributes = attributes)
}
if (type == "scatter") {
axis = c(2, 3)
id <- names(data)[1]
xAxis <- names(data)[axis[1]]
yAxis <- names(data)[axis[2]]
size <- names(data)[4]
size <- size %||% FALSE
settings <- list(id = id, xAxis = xAxis, yAxis = yAxis,
size = size)
}
if (type %in% c("network", "rings")) {
drawEdges <- TRUE
drawNodes <- TRUE
settings <- list(drawEdges = drawEdges, drawNodes = drawNodes,
focusDropdown = focusDropdown)
}
settings
}
d3plus("tree", countries)
devtools::install_github("mguevaraa/d3plus-1")
devtools::install_github("mguevara/d3plus-1")
bubbles2 <- bubbles
bubbles2["color"] <- bubbles2$group
d3plus("tree", bubbles2[c("name","value", "color", "grouping" )], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color")], grouping="TRUE")
d3plus("tree", bubbles2[c("name","value", "color")], grouping=TRUE)
d3plus("tree", bubbles2[c("name","value", "color")], grouping=FALSE)
bubbles <- read.csv(system.file("data/bubbles.csv", package = "d3plus"))
d3plus("bubbles", bubbles)
d3plus("bubbles", bubbles)
d3plus("bubbles", bubbles)
d3plus("tree", bubbles[c("name","value")], color="group")
detach("package:d3plus", unload=TRUE)
library(d3plus)
bubbles['color'] <- bubbles$group
d3plus("tree", bubbles)
View(nodes)
View(journals_scimago)
View(journals_scimago)
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/P ESTRELLAS/La Huella de Papert")
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/P ESTRELLAS/La Huella de Papert")
pub_total <- read.csv(file = "DATA_OUTPUT/publications_impact.csv", row.names = FALSE)
pub_total <- read.csv(file = "DATA_OUTPUT/publications_impact.csv")
View(pub_total)
nodes <- load_taxonomy(taxo="scimago")
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/utils.R', echo=TRUE)
nodes <- load_taxonomy(taxo="scimago")
j_c <- load_journals_category(taxo="scimago")
publications <- merge(pub_total, j_c, by.x = "journal_id", by.y = "id_journal")
publications <- merge(publications, nodes, by.x="id_category", by.y = "Id")
library(d3plus) #name, group, value, color
d3plus(type="tree", data= publications[,c("Title", "subd_name", "area_name", "Cites", "color") ], depth=0 )
publications_category <- as.data.frame(table(publications$id_category))
publications_category <- merge(publications_category, nodes, by.x = "Var1", by.y="Id")
d3plus(type="tree", data= publications_category[,c("subd_name", "area_name", NULL, "Freq", "color") ] )
rs_scimago_m <- create_rs_simago() #object iGraph!
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/PLOTRSpace.R', echo=TRUE)
rs_scimago_m <- create_rs_simago() #object iGraph!
rs_scimago_m$layout
g(rs_scimago_m)
g(rs_scimago_m)$layout
rs_scimago_m$layout
layout.fruchterman.reingold(rs_scimago_m)
position= as.data.frame(layout.fruchterman.reingold(rs_scimago_m))
names(position) <- c("x","y")
View(position)
edges <- as.data.frame(get.edgelist(rs_scimago_m, names = TRUE))
names(edges)[1:2] <- c("source", "target")
nodes['id'] <- nodes$Id
used <- E(rs_scimago_m)$used
weight <- E(rs_scimago_m)$weight
edges <- cbind(edges,weight, used)
nodes["name"] <- nodes$subd_name
nodes['group'] <- nodes$area_name
publications_category['size'] <- publications_category$Freq
nodes_plot <- merge(nodes, publications_category[,c("Var1","size")], by.x="Id", by.y = "Var1" , all.x = TRUE )
nodes_plot[is.na(nodes_plot$size), c("color")] <-NA
nodes_plot[is.na(nodes_plot$size),c('size')] <- 1
length(V(rs_scimago_m))
V(rs_scimago_m)
get_position <- function(g, seed=69)
{
set.seed(69)
position= as.data.frame(layout.fruchterman.reingold(g))
names(position) <- c("x","y")
position['id'] <- V(g)
}
position = get_position(rs_scimago_m)
View(nodes_plot)
nodes_plot <- merge(nodes_plot, position, by="id")
View(nodes_plot)
position = get_position(rs_scimago_m)
get_position <- function(g, seed=69)
{
set.seed(69)
position= as.data.frame(layout.fruchterman.reingold(g))
names(position) <- c("x","y")
position['id'] <- V(g)
return(position)
}
get_position <- function(g, seed=69)
{
set.seed(seed)
position= as.data.frame(layout.fruchterman.reingold(g))
names(position) <- c("x","y")
position['id'] <- V(g)
return(position)
}
position = get_position(rs_scimago_m)
View(position)
View(nodes)
V(rs_scimago_m)
V(rs_scimago_m)
V(rs_scimago_m)
View(position)
position = get_position(rs_scimago_m)
View(position)
get_position <- function(g, seed=69)
{
set.seed(seed)
position= as.data.frame(layout.fruchterman.reingold(g))
names(position) <- c("x","y")
position['id'] <- as.vector(V(g))
return(position)
}
position = get_position(rs_scimago_m)
View(position)
rm(position)
position = get_position(rs_scimago_m)
View(position)
V(rs_scimago_m)
V(rs_scimago_m)$name
as.integer(V(rs_scimago_m)$name)
get_position <- function(g, seed=69)
{
set.seed(seed)
position= as.data.frame(layout.fruchterman.reingold(g))
names(position) <- c("x","y")
position['id'] <- as.integer(V(g)$name)
return(position)
}
position = get_position(rs_scimago_m)
View(position)
edges <- as.data.frame(get.edgelist(rs_scimago_m, names = TRUE))
names(edges)[1:2] <- c("source", "target")
#edges_1 <- merge(edges, nodes, by.x='source', by.y='Id')
nodes['id'] <- nodes$Id
weight <- E(rs_scimago_m)$weight
edges <- cbind(edges,weight, used)
#nodes["id"] <- nodes$subd_name
nodes["name"] <- nodes$subd_name
#names(nodes)[1] <- "Id_back"
#names(nodes)[1] <- "Id"
nodes['group'] <- nodes$area_name
publications_category['size'] <- publications_category$Freq
#here starts the publication nodes configuration
nodes_plot <- merge(nodes, publications_category[,c("Var1","size")], by.x="Id", by.y = "Var1" , all.x = TRUE )
nodes_plot <- merge(nodes_plot, position, by="id")
nodes_plot[is.na(nodes_plot$size), c("color")] <-NA
nodes_plot[is.na(nodes_plot$size),c('size')] <- 1
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot, )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot, )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
View(nodes_plot)
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
detach("package:d3plus", unload=TRUE)
library("d3plus", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot )
pl_cat <- d3plus(type="network", edges[edges$used>0,], nodes=nodes_plot)
htmlwidgets::saveWidget(pl_cat,"rs_KK.html", selfcontained = FALSE)
create_rs_simago <- function()
{
file_rdata<- "New_rs_sim_pr_1971_2010_n_-1_aw_0_jf_0_awjf_0.1_min_prod_0.RData"
mean_degree <- 10
plot_rs_final(file_rs = file_rdata, mean_degree = mean_degree, mst = mst, pl_seed = 69, v_min_size = 10, cex=1, mode="max")
}
create_rs_simago()
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/utils.R', echo=TRUE)
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/PLOTRSpace.R', echo=TRUE)
scimago= create_rs_simago()
nodes<-load_taxonomy(taxo="scimago")
scimago<- create_rs_simago()
E(scimago)
as.data.frame(E(scimago))
rs.edges <- as.data.frame(get.edgelist(scimago))
View(rs.edges)
View(rs.edges)
E(scimago)$weight
E(scimago)
get.adjlist(scimago)
rs.edges <- as.data.frame(get.edgelist(scimago),E(scimago)$weight)
rs.edges <- as.data.frame(get.edgelist(scimago))
rs.edges <- as.data.frame(get.edgelist(scimago))
rs.edges[weight] <- E(scimago)$weight
rs.edges['weight'] <- E(scimago)$weight
View(rs.edges)
rs.edges['used'] <- E(scimago)$used
View(rs.edges)
l = layout(scimago)
rs.edges['name'] <- E(scimago)$name
View(rs.edges)
View(rs.edges)
rs.edges['name'] <- E(scimago)$name
View(rs.edges)
rs.edges['name'] <- E(scimago)$name
View(rs.edges)
rs.edges <- as.data.frame(get.edgelist(scimago))
rs.edges['weight'] <- E(scimago)$weight
rs.edges['used'] <- E(scimago)$used
rs.edges['name'] <- E(scimago)$name
View(rs.edges)
rs.edges <- as.data.frame(get.edgelist(scimago))
View(rs.edges)
rs.edges['weight'] <- E(scimago)$weight
View(rs.edges)
rs.edges['used'] <- E(scimago)$used
rs.edges['name'] <- E(scimago)$name
write.csv(scimago, file= "/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/SCIMAGO/RESEARCH\ SPACE\ OUTPUT/scimago_links.csv")
write.csv(rs.edges, file= "/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/SCIMAGO/RESEARCH\ SPACE\ OUTPUT/scimago_links.csv")
View(nodes)
new_nodes = data.frame(nodes$Id, nodes$subd_name)
names(new_nodes) = c("id", "name_category")
write.csv(new_nodes, file="/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/TAXONOMIES/SCIMAGO/nodes_id_names.csv")
install.packages("igraph")
install.packages("diverse")
install.packages("d3plus")
install.packages("roxygen2")
install.packages("R6")
library(scimaps)
library(scimaps)
create_rs_simago()
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/PLOTRSpace.R')
create_rs_simago()
plot.igraph(g_merge_copy)
library(scimaps)
create_rs_simago()
create_rs_simago()
create_rs_simago()
create_rs_simago()
library(scimaps)
library(scimaps)
create_rs_simago()
library(scimaps)
create_rs_simago()
library(scimaps)
create_rs_simago()
detach("package:scimaps", unload=TRUE)
library(scimaps)
create_rs_simago()
create_rs_simago()
library(scimaps)
create_rs_simago()
library(scimaps)
create_rs_simago()
detach("package:scimaps", unload=TRUE)
library("scimaps", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
create_rs_simago()
library(scimaps)
library(scimaps)
library(scimaps)
source('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/scimaps/R/PLOTRSpace.R')
create_rs_simago()
library(scimaps)
create_rs_simago()
nodes<-load_taxonomy(taxo="scimago")
library(scimaps)
library(scimaps)
library(scimaps)
library(scimaps)
library(scimaps)
library(scimaps)
scidat
scimago_nodes
scidat
scimago_nodes
c =1
data(scimago_nodes)
load(scimago_nodes)
scimago_nodes
k = scimago_nodes
View(k)
ucsd_nodes
j = ucsd_nodes
View(j)
View(plot_graph_smart_2)
install.packages("pheatmap")
library(rescinnet)
create_rs_ucsd()
create_rs_simago()
nodes <- load_taxonomy(taxo="scimago")
rs_scimago_m <- create_rs_simago() #object iGraph!
rs_scimago_m <- create_rs_simago() #object iGraph!
rs_scimago_m <- create_rs_simago() #object iGraph!
library(rescinnet)
rs_scimago_m <- create_rs_simago() #object iGraph!
len(V(g_merge_copy))
length(V(g_merge_copy))
str(g_merge_copy)
E(g_merge_copy)
V(g_merge_copy)
library(rescinnet)
rs_scimago_m <- create_rs_simago() #object iGraph!
rs_scimago_m <- create_rs_simago() #object iGraph!
library(rescinnet)
rs_scimago_m <- create_rs_simago() #object iGraph!
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/rs_ucsd.RData")
file_rdata<- "New_rs_sim_pr_1971_2010_n_-1_aw_0_jf_0_awjf_0.1_min_prod_0.RData"
path_rs <- "/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/SCIMAGO/RESEARCH\ SPACE\ OUTPUT" #HARD CODED
load(file.path(path_rs, file_rs)) #load complete information of the research space wanted all variables are rs_
file_rs = file_rdata
load(file.path(path_rs, file_rs)) #load complete information of the research space wanted all variables are rs_
View(rs_adj)
View(rs_inner_values)
