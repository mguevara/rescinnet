setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
getwd()
()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
setwd(dir="/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA", )
setwd(dir="/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA" )
getwd()
getwd()
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
data_raw = load_raw_data(path_raw_files = "../DATA/raw_data")
data_raw = load_raw_data(path_raw_files = "../DATA/raw_data")
library(rescinnet)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/raw_data"
data_raw = load_raw_data(path_raw_files = path_raw)
library("rescinnet")
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/raw_data"
data_raw = load_raw_data(path_raw_files = path_raw)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
library(rescinnet)
library(rescinnet)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
library(rescinnet)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
data_raw = load_raw_data(path_raw_files = path_raw)
library(rescinnet)
data_raw = load_raw_data(path_raw_files = path_raw)
View(data_raw)
data_raw = load_raw_data(path_raw_files = path_raw)
names(data_raw)
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline') #without
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline') #without
View(data_raw)
max(data_raw[year])
max(data_raw['year'])
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline') #without
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline', value="weight_final") #without
value="weight_final"
producer='id_institution'
category='sub.discipline'
aggregate(x=data_raw[value], by=list(producer=data_raw[producer], category = data_raw[category]), FUN=sum)
len(data_raw[producer])
length(data_raw[producer])
producer
length(data_raw['id_institution'])
View(data_raw)
View(data_raw)
length(data_raw[producer])
length(data_raw[category])
length(data_raw$category)
length(data_raw$id_institution)
summary(data_raw[category])
k = (data_raw[category])
k = (data_raw[category][1])
k = (data_raw[category][[1]])
k[1]
k[2]
aggregate(x=data_raw[value], by=list(producer=data_raw[producer][[1]], category = data_raw[category][[1]]), FUN=sum)
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline', value="weight_final") #without
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline', value="weight_final") #without
data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline', value="weight_final") #without
View(data_interval)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='wight_final', agg_fun=mean, list_prod=NaN)
View(data_interval)
data_interval <- data_raw
year="year"
producer='id_institution'
category='sub.discipline'
value='wight_final
agg_fun=mean
colnames(data_interval)[match(year,colnames(data_interval))] <- 'year'
agg_fun=mean
colnames(data_interval)[match(year,colnames(data_interval))] <- 'year'
colnames(data_interval)[match(producer,colnames(data_interval))] <- 'producer'
colnames(data_interval)[match(category,colnames(data_interval))] <- 'category'
colnames(data_interval)[match(value,colnames(data_interval))] <- 'value'
View(data_interval)
totals_producers <- aggregate(value~producer, data_interval, FUN=sum)
View(totals_producers)
producers_ids <- totals_producers$producer[totals_producers$value> (num_years * min_prod)] #FILTER HERE!!!!
num_years <- end-init
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='wight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='wight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='wight_final', agg_fun=mean, list_prod=NaN)
View(data_interval)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='wight_final', agg_fun=mean, list_prod=NaN)
View(data_interval)
data_interval$value
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=100, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=1000, init=2010, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
View(data_to_overlay)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=2, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=3, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=10, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
numRows(data_interval)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=3, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
View(data_to_overlay)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=3, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
View(data_raw)
length(unique(data_raw$id_institution))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=5, cum=FALSE, min_prod=0.2, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=NaN, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1940, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
#help here
#http://rpubs.com/mansun_kuo/24330
#seting up ..
#setwd('~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/CODES/RS2015/APPLICATIONS-MARKDOWNS')
setwd("/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA")
getwd()
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
install.packages("roxygen2")
install.packages("diverse")
install.packages("proxy")
library(rescinnet)
library("rescinnet")
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
View(data_raw)
#data_to_overlay <- get_data_to_overlay(n=-1, init=2005, end=2010, by = 3, cum=FALSE, min_prod = 30, what_agg="wgh_jfrac", agg_fun = sum, list_prod = NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
library("rescinnet")
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
plot_rs(path_rs = "rs_ucsd.RDat")
plot_rs(path_rs = "rs_ucsd.RDat")
load(rs_ucsd)
load(rs_ucsd.RDat)
load('rs_ucsd.RDat')
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/rs_ucsd.RData")
E(rs_ucsd)
E(rs_ucsd)$weight
E(rs_ucsd)$layout
E(rs_ucsd)$
la
load(rs_ucsd)
E(rs_ucsd)
data("rs_ucsd")
rs_ucsd
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/rs_ucsd.RData")
rs_adj
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/rs_ucsd.RData")
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/ucsd.RData")
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/scimago.RData")
load("~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/data/rs_ucsd.RData")
plot(rs_ucsd)
plot_graph_smart_2(rs_ucsd)
E(rs_ucsd)
V(rs_ucsd)
E(rs_ucsd)
attributes(E(rs_ucsd))
summary(rs_ucsd)
str(rs_ucsd)
summary(rs_ucsd)
V(rs_ucsd)$color
summary(rs_ucsd)
E(rs_ucsd)$weight
E(rs_ucsd)$color
summary(rs_ucsd)
nodes = ucsd_nodes
print("Unique producers")
print(length(unique(data_to_overlay$id_producer)))
print(length(unique(data_to_overlay$producer)))
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
print("Data to overlay")
print(str(data_to_overlay))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
print("Unique producers")
print(length(unique(data_to_overlay$producer)))
his <- hist(data_to_overlay$value)
print(his)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=map_eval, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=map_eval, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
load("/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/UCSD/New_rs_sim_pr_1971_2010_n_-1_aw_0_jf_0_awjf_0.1_min_prod_0.RData")
View(rs_inner_values)
k = create_rs_ucsd()
nodes = ucsd_nodes
k = create_rs_ucsd()
nodes
k = create_rs_ucsd()
k = create_rs_ucsd()
View(ucsd_nodes)
k = create_rs_ucsd()
k = create_rs_ucsd()
View(nodes)
View(nodes)
View(nodes)
k = create_rs_ucsd()
summary(g)
summary(k)
g = create_rs_ucsd()
summary(g)
g
V(g)$name
ucsd_nodes
data(ucsd_nodes)
ucsd_nodes
k = ucsd_nodes
View(k)
g = create_rs_simago()
g = create_rs_simago()
g = create_rs_ucsd()
load("/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/UCSD/New_rs_sim_pr_1971_2010_n_-1_aw_0_jf_0_awjf_0.1_min_prod_0.RData")
load("/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/RESEARCH_SPACE/SCIMAGO/New_rs_sim_pr_1971_2010_n_-1_aw_0_jf_0_awjf_0.1_min_prod_0.RData")
g = create_rs_ucsd()
g = create_rs_ucsd()
g
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
install.packages("proxy")
library(rescinnet)
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
#data_to_overlay <- get_data_to_overlay(n=-1, init=2005, end=2010, by = 3, cum=FALSE, min_prod = 30, what_agg="wgh_jfrac", agg_fun = sum, list_prod = NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
#data_to_overlay <- get_data_to_overlay(n=-1, init=2005, end=2010, by = 3, cum=FALSE, min_prod = 30, what_agg="wgh_jfrac", agg_fun = sum, list_prod = NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=0.5, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
#data_to_overlay <- get_data_to_overlay(n=-1, init=2005, end=2010, by = 3, cum=FALSE, min_prod = 30, what_agg="wgh_jfrac", agg_fun = sum, list_prod = NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw, n=-1, init=1990, end=NaN, by=5, cum=FALSE, min_prod=1, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
print("Unique producers")
print(length(unique(data_to_overlay$producer)))
his <- hist(data_to_overlay$value)
print(his)
g = create_rs_ucsd()
g = create_rs_ucsd()
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
nodes = load_taxonomy("ucsd")
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
View(data_to_overlay)
View(nodes)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
library(rescinnet)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
View(nodes)
g1 <- get_benchmark_map()
install.packages("MESS")
library(rescinnet)
library("rescinnet")
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
library(rescinnet)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=100, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
print("Unique producers")
print(length(unique(data_to_overlay$producer)))
his <- hist(data_to_overlay$value)
print(his)
#g = create_rs_ucsd()
g = plot_rs()
nodes = load_taxonomy("ucsd")
#Garbage I had to do since I had a mess with the Ids, one for opus, one for ucsd, one for other thing
nodes$id_opus <- nodes$Id
nodes$Id <- nodes$ucsd_subdisc_id #going back to id numbers of ucsd
g_names_opus <-V(g)$name
g_names <- as.data.frame(g_names_opus)
g_names <- merge(nodes, g_names, by.x='id_opus', by.y='g_names_opus')
V(g)$name <- g_names$Id
producers <- read_csv("~/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/institutions_master.csv")
producers <- read("~/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/institutions_master.csv")
producers <- read.csv("~/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/institutions_master.csv")
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, producers=producers, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = TRUE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
rocs_agg <- plot_rocs(data_eval_roc = data_rocs, pl=FALSE)
View(data_eval_roc)
View(data_rocs)
View(data_rocs)
library(rescinnet)
library("rescinnet")
path_raw = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/data_raw"
data_raw = load_raw_data(path_raw_files = path_raw)
hist(data_raw$weight_final)
#aggregating
#data_interval <- load_data_interval(data_raw=data_raw, init = NaN, end = end, agg=NaN) #without aggregation
#data_interval <- load_data_interval(data_raw=data_raw, producer='id_institution', category='sub.discipline', value="weight_final") #without
#data_to_overlay <- get_data_to_overlay(n=-1, init=2005, end=2010, by = 3, cum=FALSE, min_prod = 30, what_agg="wgh_jfrac", agg_fun = sum, list_prod = NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=100, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
print("Unique producers")
print(length(unique(data_to_overlay$producer)))
his <- hist(data_to_overlay$value)
print(his)
#g = create_rs_ucsd()
g = plot_rs()
nodes = load_taxonomy("ucsd")
#Garbage I had to do since I had a mess with the Ids, one for opus, one for ucsd, one for other thing
nodes$id_opus <- nodes$Id
nodes$Id <- nodes$ucsd_subdisc_id #going back to id numbers of ucsd
g_names_opus <-V(g)$name
g_names <- as.data.frame(g_names_opus)
g_names <- merge(nodes, g_names, by.x='id_opus', by.y='g_names_opus')
V(g)$name <- g_names$Id
producers <- read.csv("~/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/institutions_master.csv")
#this function only is usesful to plot a lot of things the function to get the numbers is plot_rocs
#data_rocs <- overlay_data_3(data_to_use = data_to_overlay, producers=producers, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = TRUE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, producers=producers, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
#this function works with data processed by overlay_data_3
rocs_agg <- plot_rocs(data_eval_roc = data_rocs, producers=producers, pl=FALSE)
map <- "RSpace-UCSD"
data_plot <- data.frame(map, rocs_agg)
plot_box(data_plot)
#plotting in a more fancy way
library(ggplot2)
#p_N_D<-qplot(map,auc_U_D,data=data_plot_cum_2,geom='boxplot', xlab = xlab, ylab='AUC from Nascent to Developed', ylim=ylim, facets = . ~ granu) #this is with granularity
col_mean <- 'red'
geom_mean <- 'point'
xlab=''
ylim = c(0,1)
p<-qplot(map,auc_I_A,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Inactive to Active', ylim=ylim)
p<-p + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p)
p_N_D<-qplot(map,auc_U_D,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Nascent to Developed', ylim=ylim)
p_N_D<-p_N_D + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p_N_D)
p_I_D<-qplot(map,auc_G_D,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Intermediate to Developed', ylim=ylim)
p_I_D<-p_I_D + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p_I_D)
#putting togetter 3 transitions
library('gridExtra')
#grid.arrange(p, p_N_D, p_I_D, ncol=3)
#grid.arrange(p, arrangeGrob(p_N_D,p_I_D, heights=c(1/2, 1/2), ncol=1), ncol=2)
grid.arrange(arrangeGrob(p, p_N_D, p_I_D, widths =c(3/7, 2/7, 2/7), ncol=3 ), nrow=1)
View(data_plot)
View(data_to_overlay)
View(data_rocs)
View(data_plot)
View(data_to_overlay)
View(data_plot)
View(data_to_overlay)
min(data_rocs$interval)
data_rocs$interval[1]
data_rocs$interval[-1]
data_rocs$interval[1]
data_rocs$interval[:1]
tail(data_rocs$interval,1)
#saving files
output_dir = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/OUTPUT"
write.csv(data_rocs, file = file.path(output_dir, "41_ROCS_institutions_2000_2017_by_3.csv"),row.names=FALSE)
#saving files
output_dir = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/OUTPUT"
write.csv(data_to_overlay, file = file.path(output_dir, "41_INTERVALS_RCA_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_rocs, file = file.path(output_dir, "41_DENSITIES_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_plot, file = file.path(output_dir, "41_ROCS_institutions_2000_2017_by_3.csv"),row.names=FALSE)
#saving files
output_dir = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/OUTPUT/UNIVERSITIES"
write.csv(data_to_overlay, file = file.path(output_dir, "41_INTERVALS_RCA_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_rocs, file = file.path(output_dir, "41_DENSITIES_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_plot, file = file.path(output_dir, "41_ROCS_institutions_2000_2017_by_3.csv"),row.names=FALSE)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=50, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=25, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=12, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
data_to_overlay <- get_data_to_overlay(data_interval=data_raw,  n=-1, init=2000, end=NaN, by=3, cum=FALSE, min_prod=12, year="year", producer='id_institution', category='sub.discipline', value='weight_final', agg_fun=mean, list_prod=NaN)
print("Data to overlay")
print(str(data_to_overlay))
print(paste("TOTAL NUMBER OF PRODUCERS:", length(unique(data_to_overlay$producer))))
print("Unique producers")
print(length(unique(data_to_overlay$producer)))
his <- hist(data_to_overlay$value)
print(his)
#g = create_rs_ucsd()
g = plot_rs()
nodes = load_taxonomy("ucsd")
#Garbage I had to do since I had a mess with the Ids, one for opus, one for ucsd, one for other thing
nodes$id_opus <- nodes$Id
nodes$Id <- nodes$ucsd_subdisc_id #going back to id numbers of ucsd
g_names_opus <-V(g)$name
g_names <- as.data.frame(g_names_opus)
g_names <- merge(nodes, g_names, by.x='id_opus', by.y='g_names_opus')
V(g)$name <- g_names$Id
producers <- read.csv("~/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/institutions_master.csv")
#this function only is usesful to plot a lot of things the function to get the numbers is plot_rocs
#data_rocs <- overlay_data_3(data_to_use = data_to_overlay, producers=producers, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = TRUE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
data_rocs <- overlay_data_3(data_to_use = data_to_overlay, producers=producers, nodes=nodes, what_eval = 'rca', min_to_grw = 0.5, min_to_dev = 1, pl_base_mst = FALSE, pl_base = FALSE, pl = FALSE, pl_w_pdf = FALSE, pl_roc = FALSE, rs_to_eval=g, rs_mean_degree=pl_mean_degree, cex=0.5, dens_links = dens_links)
#this function works with data processed by overlay_data_3
rocs_agg <- plot_rocs(data_eval_roc = data_rocs, producers=producers, pl=FALSE)
map <- "RSpace-UCSD"
data_plot <- data.frame(map, rocs_agg)
plot_box(data_plot)
#saving files
output_dir = "/Users/mguevara/Dropbox/UPLA/INVESTIGACION/PROYECTOS/BRAZIL-RSPACE/DATA/OUTPUT/UNIVERSITIES"
write.csv(data_to_overlay, file = file.path(output_dir, "181_INTERVALS_RCA_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_rocs, file = file.path(output_dir, "181_DENSITIES_institutions_2000_2017_by_3.csv"),row.names=FALSE)
write.csv(data_plot, file = file.path(output_dir, "181_ROCS_institutions_2000_2017_by_3.csv"),row.names=FALSE)
xlab=''
#plotting in a more fancy way
library(ggplot2)
#p_N_D<-qplot(map,auc_U_D,data=data_plot_cum_2,geom='boxplot', xlab = xlab, ylab='AUC from Nascent to Developed', ylim=ylim, facets = . ~ granu) #this is with granularity
col_mean <- 'red'
geom_mean <- 'point'
xlab=''
ylim = c(0,1)
p<-qplot(map,auc_I_A,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Inactive to Active', ylim=ylim)
p<-p + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p)
p_N_D<-qplot(map,auc_U_D,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Nascent to Developed', ylim=ylim)
p_N_D<-p_N_D + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p_N_D)
p_I_D<-qplot(map,auc_G_D,data=data_plot,geom='boxplot', xlab = xlab, ylab='AUC from Intermediate to Developed', ylim=ylim)
p_I_D<-p_I_D + stat_summary(fun.y=mean,shape=1,col=col_mean,geom=geom_mean)
print(p_I_D)
#putting togetter 3 transitions
library('gridExtra')
#grid.arrange(p, p_N_D, p_I_D, ncol=3)
#grid.arrange(p, arrangeGrob(p_N_D,p_I_D, heights=c(1/2, 1/2), ncol=1), ncol=2)
grid.arrange(arrangeGrob(p, p_N_D, p_I_D, widths =c(3/7, 2/7, 2/7), ncol=3 ), nrow=1)
