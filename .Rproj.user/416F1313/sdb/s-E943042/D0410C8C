{
    "collab_server" : "",
    "contents" : "#' @export\nreduce_name_journal <- function(j_name)\n{\n  c_name <- tolower(j_name)\n  \n  #take only text before part\n  if(grepl(' part ', c_name))\n  {\n    c_name <- strsplit(' Part ', c_name )[1]\n  }\n  \n  #deleting ...\n  #c_name <- sub('\\\\...', '', c_name)\n  c_name <- gsub('\\\\(.+?\\\\)', '', c_name)\n  c_name <- gsub('<..>', '', c_name) #<e2><80><a6>\n  c_name <- gsub('\\342\\200\\246', '', c_name) #...\n  c_name <- gsub(',', '', c_name)\n  c_name <- gsub('-', '', c_name)\n  c_name <- gsub(':', '', c_name)\n  c_name <- gsub('/', '', c_name)\n  c_name <- gsub(';', '', c_name)\n  c_name <- gsub(\"'\", '', c_name)\n  c_name <- gsub('\"', '', c_name)\n  c_name <- gsub(\"[[:punct:]]\", '', c_name)\n  c_name <- gsub(\"[[:space:]]\", '', c_name)\n  \n  return(c_name)\n}\n\n#given a minimal journal name, returns an id in the database of scimago\nfind_id_journal <- function(journal_min)\n{\n  journals_scimago <<- load_journals_scimago()\n  \n  if(journal_min %in% rownames(journals_scimago))\n  {\n    return( journals_scimago[journal_min, 'id_journal'])  \n  }\n  else\n  {\n    return(NaN)\n  }\n  \n}\n\n#' @export\nload_journals_scimago <- function()\n{\n  if(!exists(\"journals_scimago\"))\n  {\n    journals_scimago <- read.csv(\"/Users/mguevara/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/TAXONOMIES/SCIMAGO/scimago_journals\")\n    \n    journals_scimago['journal_min'] <- sapply(journals_scimago[, c('journal')], function(x) reduce_name_journal(x))\n    \n    #deleting duplicated jounals\n    journals_duplicated_frequency <- table(journals_scimago$journal_min)\n    journals_duplicated <- names(journals_duplicated_frequency[journals_duplicated_frequency>1])\n    journals_scimago <- journals_scimago[!journals_scimago$journal_min %in% journals_duplicated,  ]\n    journals_scimago[journals_scimago$journal_min %in% journals_duplicated, ]\n    \n    rownames(journals_scimago) <- journals_scimago$journal_min\n  }\n  return(journals_scimago)\n  \n}\n\n#returns nodes and edges of some catetory, also a dataframe to track areas\n#' @export\nload_taxonomy <- function(taxo=\"scimago\")\n{\n  if(taxo==\"scimago\")\n  {\n    nodes <- scimago_nodes    \n  }\n\n  return(nodes)\n}\n\n\n#returns dataframen with id_journal and id_category according taxonomy\n#algorithm to make assignation between categories and journals UNIQUE\n#' @export\nload_journals_category <- function(taxo=\"scimago\")\n{\n  if(taxo==\"scimago\")\n  {\n    #journal_category <- read.csv(\"~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/DATA/TAXONOMIES/SCIMAGO/Journals-Categories-Sep2014.csv\", sep = \"\\t\")\n    journal_category <- read.csv(\"~/Dropbox/UPLA/INVESTIGACION/P\\ ESTRELLAS/RESEARCH\\ SPACE\\ TO\\ LIVE/DATA_OUTPUT/scimago_journal_category_indicator_2013\", sep = \",\")\n  }\n  journal_category$quartile <- as.numeric(substr(journal_category$quartile,2,2))\n  #hardocing indicators for 2014-2017\n  j_c_2013 <- subset(journal_category, id_year=\"2013\")\n  j_c_2014 <- j_c_2013; j_c_2014$id_year <- as.integer(2014)\n  j_c_2015 <- j_c_2013; j_c_2015$id_year <- as.integer(2015)\n  j_c_2016 <- j_c_2013; j_c_2016$id_year <- as.integer(2016)\n  j_c_2017 <- j_c_2013; j_c_2017$id_year <- as.integer(2017)\n  \n  journal_category <- rbind(journal_category,j_c_2014, j_c_2015, j_c_2016, j_c_2017)\n  \n  #sorting descendent by category and descending by quartile\n  journal_category <- journal_category[order(journal_category[,4], journal_category[,2]),]\n  \n  j_c_final=data.frame()\n  \n  for(year in unique(journal_category$id_year))\n  {\n    print(year)\n    j_c_temp <- subset(journal_category, id_year==year)\n    j_c_temp <- j_c_temp[ !duplicated(j_c_temp$id_journal),]\n    j_c_final <- rbind(j_c_final, j_c_temp)\n    \n  }\n  \n  return(j_c_final)\n}\n",
    "created" : 1506695953123.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4230857813",
    "id" : "D0410C8C",
    "lastKnownWriteTime" : 1507041475,
    "last_content_update" : 1507041475179,
    "path" : "~/Dropbox/doctorado/MIT_PROJECT/TESIS_RESEARCH_SPACE/codes/rescinnet/R/utils.R",
    "project_path" : "R/utils.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}